---
language: objective-c
cache:
  directories: $HOME/.ccache
osx_image: xcode8
env:
  global:
  - secure: SLJCjkjDsTMbCIV9Wecz5JATnhk0fuzlnLMeZdvvFDv+8NL8cXyutkU0VfyRSLf3HSD1Js79a6fRMROyVGWj/w/BRrjqGnZzsB6+ZeJNnadiVIF5Gh+w90We5ccvSp2G4DyYgwkNnkKlJK7zNEWGu/K+bHL1EOCA+EIVrFMyA44=
  - secure: ecj/PwpbHkH9AYFsc2TMeRuNm5E3xMM8A0x4AcGhzpwDuZWdFx3R1T4G9u45Z5aUyTJWGqOeX1JPaEVVFZuYnNBKRy0kmiUrM9EE0j7WsT57K48tP1ysn2ynyvHgbYkKOfYR0t8XAMWTBbulT9DVVk3DS69//2WgiXGDVUEJTyI=
  - numjobs=3
  - OSX=1
  - USE_CCACHE=1
  - CCACHE_SLOPPINESS=pch_defines,time_macros
  - CCACHE_COMPRESS=1
  - CCACHE_MAXSIZE=300M
  matrix:
  - MAKEFILE=1    URHO3D_LIB_TYPE=SHARED URHO3D_DEPLOYMENT_TARGET=generic
  - XCODE=1       URHO3D_LIB_TYPE=STATIC CMAKE_OSX_DEPLOYMENT_TARGET=10.11 SF_DEFAULT=mac:OSX-64bit-STATIC.tar.gz
  - XCODE=1       URHO3D_LIB_TYPE=SHARED CMAKE_OSX_DEPLOYMENT_TARGET=10.11
  - XCODE=1 IOS=1 URHO3D_LIB_TYPE=STATIC IPHONEOS_DEPLOYMENT_TARGET=9.1 sdk=iphonesimulator
matrix:
  fast_finish: true
before_script:
- rake ci_timer
- export TRAVIS_COMMIT=$TRAVIS_COMMIT~
- export COMMIT_MESSAGE=$(git log --format=%B -n 1 $TRAVIS_COMMIT)
- export TAG=$(git describe --exact-match $TRAVIS_COMMIT 2>/dev/null); if [[ $TAG
  =~ [[:digit:]]+\.[[:digit:]]+ ]]; then export RELEASE_TAG=$TAG; fi
- if [[ $XCODE ]] && ([[ $RELEASE_TAG ]] || (! [[ $TRAVIS_BRANCH =~ [^-]+-[^-]+-CI
  ]] && echo $COMMIT_MESSAGE |grep -cq '\[ci package\]')); then export PACKAGE_UPLOAD=1;
  fi
- which cmake >/dev/null 2>&1 || cmake=cmake
- if [[ $PACKAGE_UPLOAD ]]; then doxygen='doxygen graphviz'; whitelist='brew-cask
  ccache cmake doxygen graphviz libpng libyaml md5deep openssl pkg-config readline';
  for f in $(brew list); do [[ $whitelist =~ $f ]] || brew uninstall --force $f; done
  && for f in $(brew cask list |grep -v Uninstalling); do [[ $whitelist =~ $f ]] ||
  brew cask uninstall --force $f; done && brew cleanup; fi
- travis_retry brew install ccache $cmake $doxygen
- export PATH=$(brew info ccache |grep -o '\S*lib\S*'):$PATH
- if [ $XCODE ]; then pushd $(dirname $(xcodebuild -find-executable clang)) && sudo
  cp -p $(which ccache) . && for compiler in clang clang++; do sudo mv $compiler{,.orig}
  && sudo ln -sf $(pwd)/clang.orig /usr/local/bin/$compiler && sudo ln -sf ccache
  $compiler; done && popd && if [ $IOS ]; then redundant=AppleTV,Watch; elif [ $TVOS
  ]; then redundant=iPhone,Watch; else redundant=iPhone,AppleTV,Watch; fi && eval
  sudo rm -rf /Applications/Xcode.app/Contents/Developer/Platforms/{$redundant}{OS,Simulator}.platform;
  if echo $COMMIT_MESSAGE |egrep -cq '\[(ccache clear|xcode 64bit only)\]' || [[ $(ccache
  -s |grep 'files in cache' |rev |cut -d' ' -f1 |rev) == '0' ]]; then export XCODE_64BIT_ONLY=1;
  fi; fi
- rake ci_setup_cache
script: rake ci && if [ $PACKAGE_UPLOAD ]; then rake ci_package_upload; fi && rake
  ci_timer
after_script:
- rake ci_teardown_cache
- if [ ${TRAVIS_JOB_NUMBER##*.} == 4 ]; then rake ci_delete_mirror; fi
data:
  excluded_sample:
    ! '#2':
    - 42_PBRMaterials
    ! '#3':
    - 42_PBRMaterials
notifications:
  email:
    on_success: never
    on_failure: change
    recipients:
    - loorni@gmail.com
